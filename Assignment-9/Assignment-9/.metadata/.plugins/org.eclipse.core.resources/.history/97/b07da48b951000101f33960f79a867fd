package package1;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Iterator;
import java.util.List;
import java.util.ListIterator;
import java.util.Scanner;

class Student implements Comparable<Student>{
	private int rollno;
	private String name;
	private double marks;
	
	public Student() {
		
	}
	
	public Student(int id , String name , double marks) {
		this.rollno = id;
		this.name = name;
		this.marks = marks;
	}

	public int getrollno() {
		return rollno;
	}

	public void setId(int id) {
		this.rollno = id;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public double getMarks() {
		return marks;
	}

	public void setMarks(double marks) {
		this.marks = marks;
	}
	
	@Override
	public String toString() {
		return String.format("%d   %s   %f",this.rollno,this.name,this.marks);
	}
	
	@Override
	public boolean equals(Object obj) {
		if(this==obj) {
			return true;
		}
		if(!(obj instanceof Student)) {
			return false;
		}
		Student other = (Student)obj;
		if(this.rollno==other.rollno) {
			return true;
		}
		return false;
	}
	
	public int compareTo(Student other) {
		return this.rollno-other.rollno;
	}
	
}

public class Program {
	private static Scanner sc = new Scanner(System.in);
	private static List<Student> list = new ArrayList<Student>();
	
	public static Student[] getinstance() {
		Student[] arr = new Student[5];
		arr[0] = new Student(1,"Aman",80);
		arr[1] = new Student(2,"Rahul",90);
		arr[2] = new Student(3,"Chirag",75);
		arr[3] = new Student(4,"Pulkit",82);
		arr[4] = new Student(5,"Honey",65);
		return arr;
	}
	
	public static void addStudent(Student[] arr) {
		for(Student s:arr) {
			list.add(s);
		}
	}
	
	public static void display() {
		Iterator<Student>trav=list.iterator();
		while(trav.hasNext()) {
			Student s = trav.next();
			System.out.println(s.toString());
		}
	}
	
	public static void acceptRecord(int[] arr) {
		System.out.println("Enter the Rollno for Searching:- ");
		arr[0] = sc.nextInt();
	}
	
	public static Student FindRecord(int rollno) {
		Student key = new Student();
		key.setId(rollno);
		
		int index=list.indexOf(key);
		Student s=list.get(index);
		return s;
	}
	
	
	public static int menulist() {
		int choice;
		System.out.println("0. EXIT!!!");
		System.out.println("1. Add Student");
		System.out.println("2. Display all Students using Iterator");
		System.out.println("3. Search the Student on RollNo");
		System.out.println("4. Sort the Student on RollNo");
		System.out.println("5. Sort the Student on name");
		System.out.println("6. Sort the students on marks");
		System.out.println("Enter choice:- ");
		choice = sc.nextInt();
		return choice;
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[] rollno = new int[1];
		int choice;
		
		while((choice = menulist())!=0) {
			switch(choice) {
			case 1:
				//1list.clear();
				Student[] arr=Program.getinstance();
				Program.addStudent(arr);
				break;
			case 2:
				display();
				break;
			case 3:
				Program.acceptRecord(rollno);
				Student st=Program.FindRecord(rollno[0]);
				System.out.println(st.toString());
				break;
			case 4:
				class SortByRollNo implements Comparator<Student>{
					public  int compare(Student x , Student y) {
						return x.getrollno()-y.getrollno();
					}
				}
				list.sort(new SortByRollNo());
				for(Student s:list) {
					System.out.println(s.toString());
				}
				break;
				
			case 5:
				class SortByName implements Comparator<Student>{
					public  int compare(Student x , Student y) {
						return x.getName().compareTo(y.getName());
					}
				}
				list.sort(new SortByName());
				for(Student s:list) {
					System.out.println(s.toString());
				}
				break;
				
			case 6:
				class SortByMarks implements Comparator<Student>{
					public  int compare(Student x , Student y) {
						return (int)(x.getMarks()-y.getMarks());
					}
				}
				list.sort(new SortByMarks());
				for(Student s:list) {
					System.out.println(s.toString());
				}
				break;
			default:
				System.out.println("hello");
				break;
			}
		}

	}

}
